package org.example.emplyeemanagment.Entities;

import jakarta.persistence.*;
import lombok.*;

import java.time.LocalDate;
import java.util.List;

@Entity
@AllArgsConstructor
@NoArgsConstructor
@Getter
@Setter
@Builder
public class Employee {
    @Id
    /* si on a le id de type UUID pour le mettre autogenerated on fait   */
    @GeneratedValue(strategy = GenerationType.IDENTITY) // GeneratedValue(generator = "UUID")
    @Column(nullable = true) // @UuidGenerator
    private Long id;
    @Column(name = "first_name", nullable = false, length = 50)
    private String firstName;
    @Column(name = "last_name", nullable = false, length = 50)
    private String lastName;
    @Column(nullable = false, unique = true)
    private String email;
    @Column(nullable = false, name = "phone_number")
    private String phoneNumber;
    @Column(name = "hire_date", nullable = false)
    private LocalDate hireDate;
    @Column(nullable = false, length = 50)
    private String position;
    @Column(name = "is_verified", columnDefinition = "BOOLEAN DEFAULT FALSE")
    private Boolean isVerified;
    @Column(name = "account_creation_token")
    private String accountCreationToken;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "department_ID")
    private Department department;

    @OneToMany(mappedBy = "employee")
    private List<LeaveRequest> leaveRequests;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "team")
    private Team team;

    @OneToMany(mappedBy = "employee", cascade = CascadeType.ALL)
    private List<Task> tasks;

    @OneToMany(mappedBy = "supervisor")
    private List<Intern> intern;
}
